// Generated by view binder compiler. Do not edit!
package com.qbrain.smartwaste.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.qbrain.smartwaste.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDriverDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnEndRoute;

  @NonNull
  public final MaterialButton btnStartRoute;

  @NonNull
  public final MaterialCardView cardPerformance;

  @NonNull
  public final RecyclerView rvRouteStops;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvDriverName;

  @NonNull
  public final TextView tvEstimatedDistance;

  @NonNull
  public final TextView tvEstimatedTime;

  @NonNull
  public final TextView tvRouteStatus;

  @NonNull
  public final TextView tvTotalStops;

  private ActivityDriverDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnEndRoute, @NonNull MaterialButton btnStartRoute,
      @NonNull MaterialCardView cardPerformance, @NonNull RecyclerView rvRouteStops,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvDriverName,
      @NonNull TextView tvEstimatedDistance, @NonNull TextView tvEstimatedTime,
      @NonNull TextView tvRouteStatus, @NonNull TextView tvTotalStops) {
    this.rootView = rootView;
    this.btnEndRoute = btnEndRoute;
    this.btnStartRoute = btnStartRoute;
    this.cardPerformance = cardPerformance;
    this.rvRouteStops = rvRouteStops;
    this.toolbar = toolbar;
    this.tvDriverName = tvDriverName;
    this.tvEstimatedDistance = tvEstimatedDistance;
    this.tvEstimatedTime = tvEstimatedTime;
    this.tvRouteStatus = tvRouteStatus;
    this.tvTotalStops = tvTotalStops;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDriverDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDriverDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_driver_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDriverDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEndRoute;
      MaterialButton btnEndRoute = ViewBindings.findChildViewById(rootView, id);
      if (btnEndRoute == null) {
        break missingId;
      }

      id = R.id.btnStartRoute;
      MaterialButton btnStartRoute = ViewBindings.findChildViewById(rootView, id);
      if (btnStartRoute == null) {
        break missingId;
      }

      id = R.id.cardPerformance;
      MaterialCardView cardPerformance = ViewBindings.findChildViewById(rootView, id);
      if (cardPerformance == null) {
        break missingId;
      }

      id = R.id.rvRouteStops;
      RecyclerView rvRouteStops = ViewBindings.findChildViewById(rootView, id);
      if (rvRouteStops == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvDriverName;
      TextView tvDriverName = ViewBindings.findChildViewById(rootView, id);
      if (tvDriverName == null) {
        break missingId;
      }

      id = R.id.tvEstimatedDistance;
      TextView tvEstimatedDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvEstimatedDistance == null) {
        break missingId;
      }

      id = R.id.tvEstimatedTime;
      TextView tvEstimatedTime = ViewBindings.findChildViewById(rootView, id);
      if (tvEstimatedTime == null) {
        break missingId;
      }

      id = R.id.tvRouteStatus;
      TextView tvRouteStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvRouteStatus == null) {
        break missingId;
      }

      id = R.id.tvTotalStops;
      TextView tvTotalStops = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalStops == null) {
        break missingId;
      }

      return new ActivityDriverDashboardBinding((CoordinatorLayout) rootView, btnEndRoute,
          btnStartRoute, cardPerformance, rvRouteStops, toolbar, tvDriverName, tvEstimatedDistance,
          tvEstimatedTime, tvRouteStatus, tvTotalStops);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
