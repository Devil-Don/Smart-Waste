// Generated by view binder compiler. Do not edit!
package com.qbrain.smartwaste.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.qbrain.smartwaste.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBinCollectionBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnSubmit;

  @NonNull
  public final MaterialButton btnTakeAfterPhoto;

  @NonNull
  public final MaterialButton btnTakeBeforePhoto;

  @NonNull
  public final TextInputEditText etNotes;

  @NonNull
  public final TextInputEditText etWeight;

  @NonNull
  public final ImageView ivAfterPhoto;

  @NonNull
  public final ImageView ivBeforePhoto;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAfterPhotoStatus;

  @NonNull
  public final TextView tvBeforePhotoStatus;

  @NonNull
  public final TextView tvBinId;

  @NonNull
  public final TextView tvCollectionTime;

  private ActivityBinCollectionBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnSubmit, @NonNull MaterialButton btnTakeAfterPhoto,
      @NonNull MaterialButton btnTakeBeforePhoto, @NonNull TextInputEditText etNotes,
      @NonNull TextInputEditText etWeight, @NonNull ImageView ivAfterPhoto,
      @NonNull ImageView ivBeforePhoto, @NonNull ProgressBar progressBar, @NonNull Toolbar toolbar,
      @NonNull TextView tvAfterPhotoStatus, @NonNull TextView tvBeforePhotoStatus,
      @NonNull TextView tvBinId, @NonNull TextView tvCollectionTime) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.btnTakeAfterPhoto = btnTakeAfterPhoto;
    this.btnTakeBeforePhoto = btnTakeBeforePhoto;
    this.etNotes = etNotes;
    this.etWeight = etWeight;
    this.ivAfterPhoto = ivAfterPhoto;
    this.ivBeforePhoto = ivBeforePhoto;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.tvAfterPhotoStatus = tvAfterPhotoStatus;
    this.tvBeforePhotoStatus = tvBeforePhotoStatus;
    this.tvBinId = tvBinId;
    this.tvCollectionTime = tvCollectionTime;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBinCollectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBinCollectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bin_collection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBinCollectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmit;
      MaterialButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.btnTakeAfterPhoto;
      MaterialButton btnTakeAfterPhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnTakeAfterPhoto == null) {
        break missingId;
      }

      id = R.id.btnTakeBeforePhoto;
      MaterialButton btnTakeBeforePhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnTakeBeforePhoto == null) {
        break missingId;
      }

      id = R.id.etNotes;
      TextInputEditText etNotes = ViewBindings.findChildViewById(rootView, id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.etWeight;
      TextInputEditText etWeight = ViewBindings.findChildViewById(rootView, id);
      if (etWeight == null) {
        break missingId;
      }

      id = R.id.ivAfterPhoto;
      ImageView ivAfterPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivAfterPhoto == null) {
        break missingId;
      }

      id = R.id.ivBeforePhoto;
      ImageView ivBeforePhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivBeforePhoto == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvAfterPhotoStatus;
      TextView tvAfterPhotoStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvAfterPhotoStatus == null) {
        break missingId;
      }

      id = R.id.tvBeforePhotoStatus;
      TextView tvBeforePhotoStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvBeforePhotoStatus == null) {
        break missingId;
      }

      id = R.id.tvBinId;
      TextView tvBinId = ViewBindings.findChildViewById(rootView, id);
      if (tvBinId == null) {
        break missingId;
      }

      id = R.id.tvCollectionTime;
      TextView tvCollectionTime = ViewBindings.findChildViewById(rootView, id);
      if (tvCollectionTime == null) {
        break missingId;
      }

      return new ActivityBinCollectionBinding((CoordinatorLayout) rootView, btnSubmit,
          btnTakeAfterPhoto, btnTakeBeforePhoto, etNotes, etWeight, ivAfterPhoto, ivBeforePhoto,
          progressBar, toolbar, tvAfterPhotoStatus, tvBeforePhotoStatus, tvBinId, tvCollectionTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
