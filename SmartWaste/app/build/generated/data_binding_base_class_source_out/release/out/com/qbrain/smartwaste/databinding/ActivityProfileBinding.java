// Generated by view binder compiler. Do not edit!
package com.qbrain.smartwaste.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.qbrain.smartwaste.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnEditProfile;

  @NonNull
  public final MaterialButton btnLogout;

  @NonNull
  public final MaterialButton btnSaveProfile;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final TextInputEditText etPhone;

  @NonNull
  public final LinearLayout performanceSection;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwitchMaterial switchNotifications;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvCollectionsCompleted;

  @NonNull
  public final TextView tvEfficiencyRating;

  @NonNull
  public final TextView tvTotalDistance;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final TextView tvUserType;

  private ActivityProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnEditProfile, @NonNull MaterialButton btnLogout,
      @NonNull MaterialButton btnSaveProfile, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etName, @NonNull TextInputEditText etPhone,
      @NonNull LinearLayout performanceSection, @NonNull ProgressBar progressBar,
      @NonNull SwitchMaterial switchNotifications, @NonNull Toolbar toolbar,
      @NonNull TextView tvCollectionsCompleted, @NonNull TextView tvEfficiencyRating,
      @NonNull TextView tvTotalDistance, @NonNull TextView tvUserName,
      @NonNull TextView tvUserType) {
    this.rootView = rootView;
    this.btnEditProfile = btnEditProfile;
    this.btnLogout = btnLogout;
    this.btnSaveProfile = btnSaveProfile;
    this.etEmail = etEmail;
    this.etName = etName;
    this.etPhone = etPhone;
    this.performanceSection = performanceSection;
    this.progressBar = progressBar;
    this.switchNotifications = switchNotifications;
    this.toolbar = toolbar;
    this.tvCollectionsCompleted = tvCollectionsCompleted;
    this.tvEfficiencyRating = tvEfficiencyRating;
    this.tvTotalDistance = tvTotalDistance;
    this.tvUserName = tvUserName;
    this.tvUserType = tvUserType;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditProfile;
      MaterialButton btnEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnEditProfile == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      MaterialButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnSaveProfile;
      MaterialButton btnSaveProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveProfile == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPhone;
      TextInputEditText etPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.performanceSection;
      LinearLayout performanceSection = ViewBindings.findChildViewById(rootView, id);
      if (performanceSection == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.switchNotifications;
      SwitchMaterial switchNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchNotifications == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvCollectionsCompleted;
      TextView tvCollectionsCompleted = ViewBindings.findChildViewById(rootView, id);
      if (tvCollectionsCompleted == null) {
        break missingId;
      }

      id = R.id.tvEfficiencyRating;
      TextView tvEfficiencyRating = ViewBindings.findChildViewById(rootView, id);
      if (tvEfficiencyRating == null) {
        break missingId;
      }

      id = R.id.tvTotalDistance;
      TextView tvTotalDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalDistance == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tvUserType;
      TextView tvUserType = ViewBindings.findChildViewById(rootView, id);
      if (tvUserType == null) {
        break missingId;
      }

      return new ActivityProfileBinding((CoordinatorLayout) rootView, btnEditProfile, btnLogout,
          btnSaveProfile, etEmail, etName, etPhone, performanceSection, progressBar,
          switchNotifications, toolbar, tvCollectionsCompleted, tvEfficiencyRating, tvTotalDistance,
          tvUserName, tvUserType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
